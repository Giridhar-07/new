name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check code formatting
      run: npm run format -- --check

    - name: Run ESLint
      run: npm run lint
      
    - name: Check types
      run: npm run type-check

    - name: Run tests
      run: npm test -- --coverage
      env:
        CI: true

  size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build
      env:
        CI: true

    - name: Check bundle size
      uses: preactjs/compressed-size-action@v2
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        pattern: 'build/**/*.{js,css,html,json}'
        strip-hash: "\\b\\w{8}\\."

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Check for vulnerabilities
      run: npm audit --production

    - name: Run Snyk Security Analysis
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  conventional-commits:
    name: Conventional Commits Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check commit messages
      uses: wagoid/commitlint-github-action@v5
      with:
        configFile: .commitlintrc.json

  detect-secrets:
    name: Detect Secrets
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Detect hardcoded secrets
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  comment-pr:
    name: Comment PR Summary
    needs: [code-quality, size-check, security-audit, conventional-commits, detect-secrets]
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Create PR Comment
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const results = {
            'Code Quality': '${{ needs.code-quality.result }}',
            'Bundle Size': '${{ needs.size-check.result }}',
            'Security Audit': '${{ needs.security-audit.result }}',
            'Commit Messages': '${{ needs.conventional-commits.result }}',
            'Secret Detection': '${{ needs.detect-secrets.result }}'
          };
          
          const summary = Object.entries(results)
            .map(([check, result]) => `- ${check}: ${result === 'success' ? '✅' : '❌'}`)
            .join('\n');
            
          const body = `## Pull Request Quality Check Summary\n\n${summary}\n\n` +
                      `For detailed information, please check the Actions tab.`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: body
          });
